name: MLB Pipeline

on:
  workflow_dispatch:
    inputs:
      date:
        description: "Date for pipeline (YYYY-MM-DD)"
        required: false
        default: ""
      s3_bucket:
        description: "Override S3 bucket (optional)"
        required: false
        default: ""
      s3_prefix:
        description: "Override S3 prefix/folder (optional)"
        required: false
        default: ""
  schedule:
    # 7:30 AM Mountain during DST (Mar–Nov, UTC-6): 13:30 UTC
    - cron: "30 13 * 3-11 *"
    # 7:30 AM Mountain during Standard Time (Dec–Feb, UTC-7): 14:30 UTC
    - cron: "30 14 * 12,1,2 *"

env:
  ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  # Prefer manual input, else repo secret/var, else hard default (works now)
  S3_BUCKET: ${{ github.event.inputs.s3_bucket || secrets.S3_BUCKET || vars.S3_BUCKET || 'fantasy-sports-csvs' }}
  S3_PREFIX: ${{ github.event.inputs.s3_prefix || vars.S3_PREFIX || 'baseball' }}

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Determine pipeline DATE and YDAY
        shell: bash
        run: |
          if [ -n "${{ github.event.inputs.date }}" ]; then
            D="${{ github.event.inputs.date }}"
          else
            D="$(date -u +%Y-%m-%d)"
          fi
          Y="$(date -u -d "$D -1 day" +%Y-%m-%d)"
          echo "DATE=$D"  >> "$GITHUB_ENV"
          echo "YDAY=$Y"  >> "$GITHUB_ENV"
          echo "Using DATE=$D, YDAY=$Y"

      - name: Prepare directories
        run: |
          mkdir -p data/raw/probable_starters data/raw/rosters data/raw/weather data/raw/boxscores data/raw/betting
          mkdir -p data/analysis

      # ---------- S3: configure + restore history ----------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate AWS env
        run: |
          echo "::notice::Bucket='${S3_BUCKET}' Prefix='${S3_PREFIX}' Region='${AWS_REGION}'"
          test -n "${S3_BUCKET}" || (echo "❌ S3_BUCKET is empty. Set it in repo secrets or pass via workflow input." && exit 1)
          test -n "${AWS_REGION}" || (echo "❌ AWS_REGION is empty. Set it in repo secrets." && exit 1)
          aws sts get-caller-identity >/dev/null || (echo "❌ AWS credentials invalid." && exit 1)
          echo "✅ AWS creds OK. Using s3://${S3_BUCKET}/${S3_PREFIX}/"

      - name: Restore history from S3 (if exists)
        run: |
          aws s3 cp "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/player_game_log.jsonl" ./player_game_log.jsonl || true
          aws s3 cp "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/eval_history.jsonl" data/analysis/eval_history.jsonl || true
          aws s3 cp "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/ranked_history.jsonl" data/analysis/ranked_history.jsonl || true

      # ---------- SCRAPERS (order matters) ----------
      - name: Run probable starters scraper
        run: python mlb_probable_starters_scraper.py --date ${{ env.DATE }}

      - name: Run roster scraper (injects probable starters)
        run: python mlb_rosters_scraper.py --date ${{ env.DATE }}

      - name: Run weather scraper
        run: python mlb_weather_scraper.py --date ${{ env.DATE }}

      - name: Run box scores scraper (yesterday)
        run: python mlb_box_scraper.py --date ${{ env.YDAY }}

      - name: Run betting odds scraper
        run: python mlb_betting_odds_scraper.py --date ${{ env.DATE }} --api-key ${{ env.ODDS_API_KEY }}

      # ---------- COMBINE + ANALYZE ----------
      - name: Combine all data
        run: python mlb_combine_all_files.py --date ${{ env.DATE }}

      - name: Configure PYTHONPATH for analyzer
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Run analyzer
        run: |
          python -m analyzer.cli \
            --date ${{ env.DATE }} \
            --archive player_game_log.jsonl \
            --structured structured_players_${{ env.DATE }}.json

      # ---------- Upload updated history to S3 ----------
      - name: Upload updated history to S3
        run: |
          aws s3 cp ./player_game_log.jsonl "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/player_game_log.jsonl"
          aws s3 cp data/analysis/eval_history.jsonl "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/eval_history.jsonl"
          if [ -f data/analysis/ranked_history.jsonl ]; then
            aws s3 cp data/analysis/ranked_history.jsonl "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/ranked_history.jsonl"
          fi

      # ---------- Upload today's outputs to dated folder ----------
      - name: Upload daily outputs to S3
        run: |
          aws s3 cp "structured_players_${{ env.DATE }}.json" "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/daily/${{ env.DATE }}/" --only-show-errors || true
          aws s3 cp "data/analysis/tiers_hitters_${{ env.DATE }}.csv" "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/daily/${{ env.DATE }}/" --only-show-errors || true
          aws s3 cp "data/analysis/tiers_starting_pitchers_${{ env.DATE }}.csv" "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/daily/${{ env.DATE }}/" --only-show-errors || true
          aws s3 cp "data/analysis/evaluation_${{ env.DATE }}.csv" "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/daily/${{ env.DATE }}/" --only-show-errors || true
          aws s3 cp "data/analysis/ranked_full_${{ env.DATE }}.csv" "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/daily/${{ env.DATE }}/" --only-show-errors || true
          aws s3 cp "data/analysis/ranked_full_${{ env.DATE }}.parquet" "s3://${S3_BUCKET}/${S3_PREFIX}/mlb-history/daily/${{ env.DATE }}/" --only-show-errors || true

      # ---------- Artifacts (optional) ----------
      - name: Upload raw inputs
        uses: actions/upload-artifact@v4
        with:
          name: mlb-raw-${{ env.DATE }}
          path: |
            data/raw/probable_starters/mlb_probable_starters_${{ env.DATE }}*.json
            data/raw/rosters/mlb_rosters_${{ env.DATE }}*.json
            data/raw/weather/mlb_weather_${{ env.DATE }}*.json
            data/raw/boxscores/mlb_boxscores_${{ env.YDAY }}*.json
            data/raw/betting/mlb_betting_odds_${{ env.DATE }}*.json
          if-no-files-found: warn

      - name: Upload combined + analysis outputs
        uses: actions/upload-artifact@v4
        with:
          name: mlb-analysis-${{ env.DATE }}
          path: |
            structured_players_${{ env.DATE }}.json
            player_game_log.jsonl
            data/analysis/tiers_hitters_${{ env.DATE }}.csv
            data/analysis/tiers_starting_pitchers_${{ env.DATE }}.csv
            data/analysis/evaluation_${{ env.DATE }}.csv
            data/analysis/ranked_full_${{ env.DATE }}.csv
            data/analysis/ranked_full_${{ env.DATE }}.parquet
          if-no-files-found: warn
